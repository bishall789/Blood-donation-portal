{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bisha\\\\Desktop\\\\6th sem\\\\Elective\\\\blood-donation-platform\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetchUserProfile(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async token => {\n    try {\n      console.log(\"👤 Fetching user profile...\");\n      const response = await fetch(`${API_BASE_URL}/api/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        console.log(\"✅ User profile fetched:\", userData);\n        setUser(userData);\n        setError(null);\n      } else {\n        console.log(\"❌ Profile fetch failed, removing token\");\n        localStorage.removeItem(\"token\");\n        setError(\"Session expired. Please login again.\");\n      }\n    } catch (error) {\n      console.error(\"💥 Error fetching user profile:\", error);\n      localStorage.removeItem(\"token\");\n      setError(\"Network error. Please check your connection.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      console.log(\"🔑 Attempting login for:\", username);\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username.trim(),\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(\"📡 Login response:\", {\n        status: response.status,\n        success: response.ok\n      });\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token);\n        setUser(data.user);\n        setError(null);\n        console.log(\"✅ Login successful\");\n        return true;\n      } else {\n        console.log(\"❌ Login failed:\", data.message);\n        setError(data.message || \"Login failed\");\n        return false;\n      }\n    } catch (error) {\n      console.error(\"💥 Login error:\", error);\n      setError(\"Network error. Please check your connection.\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signup = async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      console.log(\"📝 Starting signup process for:\", userData.username);\n      const signupData = {\n        username: userData.username.trim(),\n        email: userData.email.trim().toLowerCase(),\n        password: userData.password,\n        bloodGroup: userData.bloodGroup\n      };\n      console.log(\"📤 Sending signup request to:\", `${API_BASE_URL}/api/auth/signup`);\n      console.log(\"📤 Signup data:\", {\n        ...signupData,\n        password: \"[HIDDEN]\"\n      });\n      const response = await fetch(`${API_BASE_URL}/api/auth/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(signupData)\n      });\n      console.log(\"📡 Signup response status:\", response.status);\n      console.log(\"📡 Signup response ok:\", response.ok);\n      const data = await response.json();\n      console.log(\"📡 Signup response data:\", data);\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token);\n        setUser(data.user);\n        setError(null);\n        console.log(\"✅ Signup successful, user:\", data.user);\n        return true;\n      } else {\n        console.log(\"❌ Signup failed:\", data.message);\n        setError(data.message || \"Signup failed\");\n        return false;\n      }\n    } catch (error) {\n      console.error(\"💥 Signup error:\", error);\n      setError(\"Network error. Please check your connection and try again.\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateUserRole = async (role, bloodGroup) => {\n    try {\n      setError(null);\n      const token = localStorage.getItem(\"token\");\n      console.log(\"🔄 Updating user role to:\", role);\n      const response = await fetch(`${API_BASE_URL}/api/auth/update-role`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          role,\n          bloodGroup\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Update token if provided\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n        }\n        setUser(data.user);\n        setError(null);\n        console.log(\"✅ Role updated successfully\");\n        return true;\n      } else {\n        console.log(\"❌ Role update failed:\", data.message);\n        setError(data.message || \"Failed to update role\");\n        return false;\n      }\n    } catch (error) {\n      console.error(\"💥 Update role error:\", error);\n      setError(\"Network error. Please try again.\");\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setError(null);\n    console.log(\"👋 User logged out\");\n  };\n  const updateUser = userData => {\n    setUser(prev => prev ? {\n      ...prev,\n      ...userData\n    } : null);\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    updateUser,\n    updateUserRole,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","AuthProvider","children","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","fetchUserProfile","console","log","response","fetch","headers","Authorization","ok","userData","json","removeItem","login","username","password","method","body","JSON","stringify","trim","data","status","success","setItem","message","signup","signupData","email","toLowerCase","bloodGroup","updateUserRole","role","logout","updateUser","prev","clearError","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bisha/Desktop/6th sem/Elective/blood-donation-platform/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useEffect, useState, type ReactNode } from \"react\"\n\ninterface User {\n  id: string\n  username: string\n  email: string\n  role: \"donor\" | \"requester\" | \"admin\" | null\n  bloodGroup?: string\n  isAvailable?: boolean\n  matchStatus?: string\n  isDonor?: boolean\n  isRequester?: boolean\n}\n\ninterface AuthContextType {\n  user: User | null\n  loading: boolean\n  error: string | null\n  login: (username: string, password: string) => Promise<boolean>\n  signup: (userData: any) => Promise<boolean>\n  logout: () => void\n  updateUser: (userData: Partial<User>) => void\n  updateUserRole: (role: \"donor\" | \"requester\", bloodGroup?: string) => Promise<boolean>\n  clearError: () => void\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetchUserProfile(token)\n    } else {\n      setLoading(false)\n    }\n  }, [])\n\n  const fetchUserProfile = async (token: string) => {\n    try {\n      console.log(\"👤 Fetching user profile...\")\n      const response = await fetch(`${API_BASE_URL}/api/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n\n      if (response.ok) {\n        const userData = await response.json()\n        console.log(\"✅ User profile fetched:\", userData)\n        setUser(userData)\n        setError(null)\n      } else {\n        console.log(\"❌ Profile fetch failed, removing token\")\n        localStorage.removeItem(\"token\")\n        setError(\"Session expired. Please login again.\")\n      }\n    } catch (error) {\n      console.error(\"💥 Error fetching user profile:\", error)\n      localStorage.removeItem(\"token\")\n      setError(\"Network error. Please check your connection.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      setError(null)\n      setLoading(true)\n\n      console.log(\"🔑 Attempting login for:\", username)\n\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username: username.trim(), password }),\n      })\n\n      const data = await response.json()\n      console.log(\"📡 Login response:\", { status: response.status, success: response.ok })\n\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token)\n        setUser(data.user)\n        setError(null)\n        console.log(\"✅ Login successful\")\n        return true\n      } else {\n        console.log(\"❌ Login failed:\", data.message)\n        setError(data.message || \"Login failed\")\n        return false\n      }\n    } catch (error) {\n      console.error(\"💥 Login error:\", error)\n      setError(\"Network error. Please check your connection.\")\n      return false\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const signup = async (userData: any): Promise<boolean> => {\n    try {\n      setError(null)\n      setLoading(true)\n\n      console.log(\"📝 Starting signup process for:\", userData.username)\n\n      const signupData = {\n        username: userData.username.trim(),\n        email: userData.email.trim().toLowerCase(),\n        password: userData.password,\n        bloodGroup: userData.bloodGroup,\n      }\n\n      console.log(\"📤 Sending signup request to:\", `${API_BASE_URL}/api/auth/signup`)\n      console.log(\"📤 Signup data:\", { ...signupData, password: \"[HIDDEN]\" })\n\n      const response = await fetch(`${API_BASE_URL}/api/auth/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(signupData),\n      })\n\n      console.log(\"📡 Signup response status:\", response.status)\n      console.log(\"📡 Signup response ok:\", response.ok)\n\n      const data = await response.json()\n      console.log(\"📡 Signup response data:\", data)\n\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token)\n        setUser(data.user)\n        setError(null)\n        console.log(\"✅ Signup successful, user:\", data.user)\n        return true\n      } else {\n        console.log(\"❌ Signup failed:\", data.message)\n        setError(data.message || \"Signup failed\")\n        return false\n      }\n    } catch (error) {\n      console.error(\"💥 Signup error:\", error)\n      setError(\"Network error. Please check your connection and try again.\")\n      return false\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const updateUserRole = async (role: \"donor\" | \"requester\", bloodGroup?: string): Promise<boolean> => {\n    try {\n      setError(null)\n      const token = localStorage.getItem(\"token\")\n\n      console.log(\"🔄 Updating user role to:\", role)\n\n      const response = await fetch(`${API_BASE_URL}/api/auth/update-role`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ role, bloodGroup }),\n      })\n\n      const data = await response.json()\n\n      if (response.ok) {\n        // Update token if provided\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token)\n        }\n        setUser(data.user)\n        setError(null)\n        console.log(\"✅ Role updated successfully\")\n        return true\n      } else {\n        console.log(\"❌ Role update failed:\", data.message)\n        setError(data.message || \"Failed to update role\")\n        return false\n      }\n    } catch (error) {\n      console.error(\"💥 Update role error:\", error)\n      setError(\"Network error. Please try again.\")\n      return false\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setUser(null)\n    setError(null)\n    console.log(\"👋 User logged out\")\n  }\n\n  const updateUser = (userData: Partial<User>) => {\n    setUser((prev) => (prev ? { ...prev, ...userData } : null))\n  }\n\n  const clearError = () => {\n    setError(null)\n  }\n\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    updateUser,\n    updateUserRole,\n    clearError,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}